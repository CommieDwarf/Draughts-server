{"version":3,"file":"index.js","sourceRoot":"","sources":["../src/index.ts"],"names":[],"mappings":"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","sourcesContent":["\r\nconst express = require(\"express\");\r\nconst app = express();\r\nconst http = require(\"http\");\r\nconst cors = require(\"cors\");\r\nconst server = http.createServer(app);\r\nconst { Server } = require(\"socket.io\");\r\n\r\napp.use(cors({\r\n    origin: 'localhost/Draughts/client'\r\n}));\r\n\r\nconst io = new Server(server, {\r\n    cors: {\r\n        origin: \"http://localhost\",\r\n        methods: [\"POST\", \"GET\"]\r\n    }\r\n});\r\n\r\ninterface Player {\r\n    name: string,\r\n    avatar: {\r\n        theme: string,\r\n        shape: string,\r\n    }\r\n    id: string\r\n}\r\n\r\nexport type IMessage = {\r\n    content: string,\r\n    author: Player,\r\n    room: Room,\r\n}\r\n\r\ntype Room = {\r\n    author: string,\r\n    target: string,\r\n    id: string\r\n}\r\n\r\ntype GameInfo = {\r\n    gameId: number,\r\n    playerAccepted: string,\r\n    playerAcceptedColor: string,\r\n    roomId : string,\r\n}\r\n\r\ntype Rematch = {\r\n    requested: boolean,\r\n    player: Player | null,\r\n    gameId: number,\r\n    roomId: string,\r\n}\r\n\r\n\r\nlet players: Player[] = [];\r\nio.on(\"connection\", (socket: any) => {\r\n\r\n    console.log(\"User connected\", socket.id, socket.handshake.address);\r\n    socket.on(\"player-connected\", (name: string) => {\r\n        socket.join(\"global\")\r\n       \r\n        if (name.length > 6) {\r\n            name = name.slice(0, 6);\r\n        }\r\n        players.push({\r\n            name,\r\n            avatar: {\r\n                theme: getRandomElement(avatarThemes),\r\n                shape: getRandomElement(avatarShapes)\r\n            },\r\n            id: socket.id\r\n        });\r\n        io.emit(\"players_update\", players);\r\n    })\r\n\r\n    socket.on(\"create_room\", (room: Room) => {\r\n        socket.broadcast.emit(\"room_created\", room);\r\n    })\r\n    socket.on(\"join_room\", (room: Room) => {\r\n        socket.join(room.id);\r\n    })\r\n    socket.on(\"leave_room\", (room: Room) => {\r\n        socket.leave(room.id);\r\n    })\r\n\r\n    socket.on(\"join_game\", (roomId: string) => {\r\n        socket.join(roomId);\r\n        socket.broadcast.to(roomId).emit(\"get_gameId\");\r\n    })\r\n\r\n    socket.on(\"request_join_game\", ({author, gameId}: {gameId: number, author:string}) => {\r\n        socket.broadcast.emit(\"requested_join_game\", {author, gameId});\r\n    })\r\n\r\n    socket.on(\"send_message\", (msg: IMessage) => {\r\n        console.log(msg);\r\n        socket.broadcast.to(msg.room.id).emit((\"get_message\"), msg);\r\n    })\r\n\r\n\r\n    socket.on(\"writing\", (room: {name: string, id:string}) => {\r\n        socket.broadcast.emit(\"someone_writing\", room);\r\n    })\r\n    socket.on(\"done_writing\", (room: {name: string, id:string}) => {\r\n        socket.broadcast.emit(\"done_writing\", room)\r\n    })\r\n\r\n    socket.on(\"request_players_list\", () => {\r\n        io.emit(\"get_players\", players);\r\n    })\r\n\r\n    socket.on(\"accept_challange\", (gameInfo: GameInfo) => {\r\n        socket.broadcast.to(gameInfo.roomId).emit(\"challange_accepted\", gameInfo);\r\n    })\r\n    socket.on(\"make_move\", (gameInfo: GameInfo) => {\r\n            socket.broadcast.to(gameInfo.roomId).emit(\"move_made\", gameInfo);\r\n    })\r\n    socket.on(\"player_wants_rematch\", (rematch: Rematch) => {\r\n        socket.broadcast.to(rematch.roomId).emit(\"player_wants_rematch\", rematch)\r\n    })\r\n    socket.on(\"restart_game\", (gameInfo: GameInfo) => {\r\n        socket.broadcast.to(gameInfo.roomId).emit(\"game_restarted\")\r\n    })\r\n    socket.on(\"player-close-game\", (gameInfo: GameInfo) => {\r\n        socket.broadcast.to(gameInfo.roomId).emit(\"player_closed_game\", gameInfo);\r\n        console.log(\"close\", gameInfo.roomId, gameInfo.gameId)\r\n    })\r\n\r\n    socket.on(\"disconnect\", () => {\r\n        console.log(\"user disconnected\");\r\n        const player = players.find((player) => player.id == socket.id);\r\n        players = players.filter((player) => player.id !== socket.id);\r\n        io.emit(\"players_update\", players);\r\n        if (player) {\r\n            io.emit(\"player_disconnected\", player);\r\n        }\r\n    })\r\n\r\n})\r\n\r\n\r\nserver.listen(process.env.PORT , () => {\r\n    console.log('server running');\r\n})\r\n\r\n\r\n\r\nconst avatarThemes = [\"frogideas\", \"sugarsweets\", \"heatwave\", \"daisygarden\", \"seascape\",\r\n    \"summerwarmth\", \"bythepool\", \"duskfalling\", \"berrypie\", \"base\"];\r\n\r\nconst avatarShapes = [\"squares\", \"isogrids\", \"spaceinvaders\", \"labs/isogrids/hexa\", \"labs/isogrids/hexa16\"];\r\n\r\nfunction getRandomElement<T>(array: T[]): T {\r\n    return array[Math.floor(Math.random() * (array.length - 1))]\r\n}\r\n\r\n\r\n"]}