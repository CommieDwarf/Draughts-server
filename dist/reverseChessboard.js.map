{"version":3,"file":"reverseChessboard.js","sourceRoot":"","sources":["../src/reverseChessboard.ts"],"names":[],"mappings":";;AAYA,SAAwB,iBAAiB,CAAC,UAAqB;IAC3D,IAAM,kBAAkB,GAAc,UAAU,CAAC;IACjD,KAAK,IAAI,CAAC,GAAG,CAAC,EAAG,CAAC,GAAG,UAAU,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;QACzC,OAAO,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;QACf,kBAAkB,CAAC,CAAC,CAAC,CAAC,KAAK,GAAG,UAAU,CAAC,UAAU,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,KAAK,CAAC;QACtE,kBAAkB,CAAC,CAAC,CAAC,CAAC,KAAK,GAAG,UAAU,CAAC,UAAU,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,KAAK,CAAC;KACzE;IAED,OAAO,kBAAkB,CAAC;AAC9B,CAAC;AATD,oCASC","sourcesContent":["\r\ninterface ISquare {\r\n    id: number;\r\n    piece: \"black\" | \"white\" | \"\";\r\n    square: string;\r\n    \"border-top\": boolean\r\n    \"border-left\": boolean\r\n    \"border-right\": boolean\r\n    \"border-bot\": boolean\r\n    queen: boolean;\r\n  }\r\n\r\nexport default function reverseChessboard(chessboard: ISquare[]) {\r\n    const reversedChessboard: ISquare[] = chessboard;\r\n    for (let i = 0 ; i < chessboard.length; i--) {\r\n        console.log(i);\r\n        reversedChessboard[i].piece = chessboard[chessboard.length - i].piece;\r\n        reversedChessboard[i].queen = chessboard[chessboard.length - i].queen;\r\n    }\r\n\r\n    return reversedChessboard;\r\n}"]}