{"version":3,"file":"createChessboard.js","sourceRoot":"","sources":["../../../../client/src/createChessboard.ts"],"names":[],"mappings":"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","sourcesContent":["import { getPreset, SIDE, IPreset} from \"./config\";\r\nimport { IChessboard } from \"./engine\";\r\nimport { ISquare } from \"./engine\";\r\n\r\n\r\nexport default function createChessboard(side: SIDE) {\r\n  let chessboard = createBoard();\r\n  const preset = getPreset(side);\r\n  if (preset) {\r\n    chessboard = addStartingPieces(chessboard, preset);\r\n  }\r\n  return chessboard;\r\n}\r\n\r\nfunction createBoard(): IChessboard {\r\n  let chessboard: IChessboard = [];\r\n\r\n  for (let i = 0; i < 64; i++) {\r\n    chessboard = pushSquare(i, chessboard);\r\n    chessboard = setBlackSquare(i, chessboard);\r\n    chessboard = setBorder(i, chessboard);\r\n  }\r\n  return chessboard;\r\n}\r\n\r\nfunction pushSquare(i: number, chessboard: IChessboard) {\r\n  let square: ISquare = {\r\n    id: i,\r\n    piece: \"\",\r\n    square: \"white\",\r\n    \"border-top\": false,\r\n    \"border-bot\": false,\r\n    \"border-right\": false,\r\n    \"border-left\": false,\r\n    queen: false,\r\n  };\r\n+\r\n  chessboard.push(square);\r\n  return chessboard;\r\n}\r\n\r\nfunction setBlackSquare(i: number, chessboard: IChessboard) {\r\n  if (i % 2 != 0 && i <= 7) {\r\n    chessboard[i][\"square\"] = \"black\";\r\n  } else if (i % 2 == 0 && i > 7 && i <= 14) {\r\n    chessboard[i][\"square\"] = \"black\";\r\n  } else if (i % 2 != 0 && i > 15 && i <= 23) {\r\n    chessboard[i][\"square\"] = \"black\";\r\n  } else if (i % 2 == 0 && i > 23 && i <= 31) {\r\n    chessboard[i][\"square\"] = \"black\";\r\n  } else if (i % 2 != 0 && i > 31 && i <= 39) {\r\n    chessboard[i][\"square\"] = \"black\";\r\n  } else if (i % 2 == 0 && i > 39 && i <= 47) {\r\n    chessboard[i][\"square\"] = \"black\";\r\n  } else if (i % 2 != 0 && i > 47 && i <= 55) {\r\n    chessboard[i][\"square\"] = \"black\";\r\n  } else if (i % 2 == 0 && i > 55 && i <= 63) {\r\n    chessboard[i][\"square\"] = \"black\";\r\n  }\r\n  return chessboard;\r\n}\r\n\r\nfunction setBorder(i: number, chessboard: IChessboard) {\r\n  switch (i) {\r\n    case 1:\r\n    case 3:\r\n    case 5:\r\n      chessboard[i][\"border-top\"] = true;\r\n      break;\r\n    case 58:\r\n    case 60:\r\n    case 62:\r\n      chessboard[i][\"border-bot\"] = true;\r\n      break;\r\n    case 8:\r\n    case 24:\r\n    case 40:\r\n      chessboard[i][\"border-left\"] = true;\r\n      break;\r\n    case 56:\r\n      chessboard[i][\"border-left\"] = true;\r\n      chessboard[i][\"border-bot\"] = true;\r\n      break;\r\n    case 7:\r\n      chessboard[i][\"border-top\"] = true;\r\n      chessboard[i][\"border-right\"] = true;\r\n      break;\r\n    case 23:\r\n    case 39:\r\n    case 55:\r\n      chessboard[i][\"border-right\"] = true;\r\n      break;\r\n  }\r\n  return chessboard;\r\n}\r\n\r\nfunction addStartingPieces(\r\n  chessboard: IChessboard,\r\n  preset: IPreset\r\n): IChessboard {\r\n  for (let i = 0; i < 64; i++) {\r\n    if (chessboard[i][\"square\"] == \"black\") {\r\n      if (preset.whitePieces.includes(i)) {\r\n        addPiece(i, \"white\", chessboard);\r\n      } else if (preset.blackPieces.includes(i)) {\r\n        addPiece(i, \"black\", chessboard);\r\n      }\r\n      if (preset.queen?.includes(i)) {\r\n        chessboard[i][\"queen\"] = true;\r\n      }\r\n    }\r\n  }\r\n  return chessboard;\r\n}\r\n\r\nfunction addPiece(i: number, color: \"white\" | \"black\", chessboard: IChessboard) {\r\n  chessboard[i][\"piece\"] = color;\r\n}\r\n"]}